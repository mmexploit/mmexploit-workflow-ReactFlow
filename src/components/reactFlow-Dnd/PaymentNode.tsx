import React from "react";
import { useDispatch } from "react-redux";
import { Handle, Position } from "reactflow";
import { addHandle } from "../../redux/handle";
import { CirclePlus } from "tabler-icons-react";
import { Tooltip } from "react-tooltip";
import ModalContainer from "./ModalContainer";
import { useDisclosure } from "@mantine/hooks";
import { DotsVertical } from "tabler-icons-react";
import DotDropDown from "./DotDropDown";
import { useState } from "react";

const ConfirmationNode = ({ data, selected, ...otherProps }) => {
  const dispatch = useDispatch();
  const [opened, { open, close }] = useDisclosure(false);
  const [returned, setReturned] = useState(false);
  const [openedDrop, setOpenedDrop] = useState(false);

  return (
    <>
      {/* <NodeToolbar position={Position.Right}>
        <Button className='bg-red-700 hover:bg-red-900'>Delete</Button>
      </NodeToolbar> */}
      <div
        className={`p-2 cursor-grab rounded-sm bg-white border-blue-700 border-2 hover:border-green-700 w-[278px] ${
          selected ? "border-4 border-green-700" : "bg-white"
        }`}
      >
        <Handle type="target" position={Position.Top} id="in" />
        <Handle
          className="-ml-16 w-4 h-4 bg-transparent border-none cursor-pointer z-100"
          type="source"
          position={Position.Bottom}
          id="ElectronicPayment"
          onClick={(event) => {
            open();
          }}
        >
          <CirclePlus
            size={18}
            strokeWidth={2.5}
            color={"#ffffff"}
            className="inline-block absolute fill-green-700 color-white z-0 mr-10"
            data-tooltip-id="Electronic-tooltip"
            data-tooltip-content="Electronic Payment"
            onClick={() => dispatch(addHandle("ElectronicPayment"))}
          />
          <Tooltip
            className="flex flex-row inline mt-4 w-max bg-slate-600 text-sm text-white p-1 rounded-md"
            id="Electronic-tooltip"
          />
        </Handle>

        <Handle
          className="ml-16 w-4 h-4 bg-transparent border-none cursor-pointer z-100"
          type="source"
          position={Position.Bottom}
          id="CashPayment"
          onClick={(event) => {
            open();
          }}
        >
          <CirclePlus
            size={18}
            strokeWidth={2.5}
            color={"#ffffff"}
            className="inline-block absolute fill-red-700 color-white z-0 mr-10"
            data-tooltip-id="Cash-tooltip"
            data-tooltip-content="Cash Payment"
            onClick={() => dispatch(addHandle("CashPayment"))}
          />
          <Tooltip
            className="flex flex-row inline mt-4 w-max bg-slate-600 text-sm text-white p-1 rounded-md"
            id="Cash-tooltip"
          />
        </Handle>


        <ModalContainer
          opened={opened}
          onClose={close}
          returned={returned}
          fromEdge={false}
          edgeId={""}
          otherProps={otherProps}
        />
        <DotsVertical
          onClick={() => setOpenedDrop(!openedDrop)}
          className="absolute right-2 cursor-pointer"
          size={15}
          strokeWidth={2}
          color={"#000000"}
        />
        <label>{data.label}</label>
        <DotDropDown opened={openedDrop} setOpened={setOpenedDrop} />
      </div>
    </>
  );
};

export default ConfirmationNode;
