import React from 'react';
import { getSmoothStepPath, Position, EdgeLabelRenderer, } from 'reactflow';

import ModalContainer from './ModalContainer';
import { useDisclosure } from '@mantine/hooks';
import { useState, useEffect } from 'react';

import '../../index.css';

const foreignObjectSize = 40;



function EdgeLabel({ transform, label }: { transform: string; label: string }) {
    return (
      <div
        style={{
          position: 'absolute',
          background: 'transparent',
          padding: 10,
          color: '#000000',
          fontSize: 12,
          fontWeight: 700,
          transform,
        }}
        className="nodrag nopan"
      >
        {label}
      </div>
    );
  }


interface CustomEdgeProps {
  id: string;
  sourceX: number;
  sourceY: number;
  targetX: number;
  targetY: number;
  sourcePosition: Position;
  targetPosition: Position;
  style?: React.CSSProperties;
  markerEnd?: string;
  label?: any
}

const onEdgeClick = (evt: React.MouseEvent<HTMLButtonElement>, id: string, ...otherprops) => {
  evt.stopPropagation();
  alert(`remove ${id}`);
  console.log({otherprops})
};



export default function CustomEdge({
  id,
  sourceX,
  sourceY,
  targetX,
  targetY,
  sourcePosition,
  targetPosition,
  style = {},
  markerEnd,
  label
}: CustomEdgeProps) {
  const [edgePath, labelX, labelY] = getSmoothStepPath({
    sourceX,
    sourceY,
    sourcePosition,
    targetX,
    targetY,
    targetPosition,
  });

  const [opened, { open, close }] = useDisclosure(false);
  const [hovered, setHovered] = useState(false);

  const [ edgeId, setEdgeId ] = useState("")

  useEffect(() => {
    const handleMouseMove = (event: MouseEvent) => {
      const mouseX = event.clientX;
      const mouseY = event.clientY;

      const distance = Math.sqrt(
        (mouseX - labelX) * (mouseX - labelX) + (mouseY - labelY) * (mouseY - labelY)
      );
      setHovered(distance < radius);
    };

    const handleMouseLeave = () => {
      setHovered(false);
    };

    const radius = 600; // Increase radius to 50 pixels

    window.addEventListener('mousemove', handleMouseMove);
    window.addEventListener('mouseleave', handleMouseLeave);

    return () => {
      window.removeEventListener('mousemove', handleMouseMove);
      window.removeEventListener('mouseleave', handleMouseLeave);
    };
  }, [labelX, labelY]);

  
  return (
    <>
      <path
        id={id}
        style={style}
        className="react-flow__edge-path"
        d={edgePath}
        markerEnd={markerEnd}
      />
      {hovered && (<foreignObject
        width={foreignObjectSize}
        height={foreignObjectSize}
        x={labelX - foreignObjectSize / 2}
        y={labelY - foreignObjectSize / 2}
        className="edgebutton-foreignobject"
        requiredExtensions="http://www.w3.org/1999/xhtml"
      >
        <div>
          <button className="edgebutton" onClick={(event) => {
            setEdgeId(id)
            open()
            }}>
            +
          </button>
        </div>
        </foreignObject>)
        }
        
      
      <EdgeLabelRenderer>
      <EdgeLabel
            transform={ `translate(-50%, -90%) translate(${labelX}px,${labelY}px)`}
            label={label}
          />
      </EdgeLabelRenderer>

      <ModalContainer opened={opened} onClose={close} returned={false} fromEdge={true} edgeId={edgeId} otherProps={""}/>
    </>
  );
}
