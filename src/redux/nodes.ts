import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { Node } from 'reactflow';
import { RootState } from './store';


interface NodesState {
  nodes: Node[];
}

const initialState: NodesState = {
  nodes: [
    {
        id: "1",
        type: "start",
        data: { label: "Start" },
        position: { x: 200, y: 150 },
        width: 48,
        height: 48,
    },
    {
        id: "2",
        type: "end",
        data: { label: "End" },
        position: { x: 756.7932572510128, y: 1115.0229916856513 },
        width: 48,
        height: 48,
        selected: false,
        positionAbsolute: { x: 756.7932572510128, y: 1115.0229916856513 },
        dragging: false,
    },
  ],
};

const nodesSlice = createSlice({
  name: 'nodes',
  initialState,
  reducers: {
    setNodes: (state, action: PayloadAction<Node[]>) => {
      state.nodes = action.payload;
    },
    addNode: (state, action: PayloadAction<Node>) => {
        const nodeToAdd = action.payload;
        const existingNode = state.nodes.find(node => node.id === nodeToAdd.id);
        if (!existingNode) {
          state.nodes.push(nodeToAdd);
        }
    },
  },
});

export const { setNodes, addNode} = nodesSlice.actions;
export default nodesSlice.reducer;
